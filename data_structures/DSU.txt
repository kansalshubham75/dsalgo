class DSU{
    public:
        vector<int> par;
        vector<int> size;
        bool shouldCompress;
        int cap;
        DSU(int cap,bool shouldCompress){
            this->cap=cap;
            this->shouldCompress=shouldCompress;
            par.assign(cap,0);
            size.assign(cap,1);
            for(int i=0;i<cap;i++)par[i]=i;
        }

        int find(int u){
            int ans=u==par[u]?u:find(par[u]);
            if(shouldCompress)par[u]=ans;
            return ans;
        }

        void merge(int p1,int p2){
            if(size[p1]>size[p2]){
                par[p2]=p1;size[p1]+=size[p2];
            }else{
                par[p1]=p2;size[p2]+=size[p1];
            }
        }
};